<?xml version="1.0" encoding="UTF-8"?>
<!-- @generated mapFile="xslt/Map_SDM_CretaeAUC_Resp.map" md5sum="6b584be3161f1e73aa081d46a2c87217" version="8.0.400" -->
<!--
*****************************************************************************
*   This file has been generated by the IBM XML Mapping Editor.
*
*   Mapping file:		Map_SDM_CretaeAUC_Resp.map
*   Map declaration(s):	Map_SDM_CretaeAUC_Resp
*   Input file(s):		smo://smo/name%3Dwsdl-primary/sharedContext%3D%257Bhttp%253A%252F%252FAS_SubmitResourceOrder_TIBCO%257DTibco_SharedBO/message%3D%257Bhttp%253A%252F%252Fthree.co.uk%252Fwsdl%252Fas_sdm_093%252Fserviceordersdm%252Fv1%257DADDResponse/xpath%3D%252F/smo.xsd
*   Output file(s):		smo://smo/name%3Dwsdl-primary/sharedContext%3D%257Bhttp%253A%252F%252FAS_SubmitResourceOrder_TIBCO%257DTibco_SharedBO/message%3D%257Bhttp%253A%252F%252FTPRMOAI%252FAIS%252FSubmitResourceOrder%257DinvokeResponseMsg/xpath%3D%252F/smo.xsd
*
*   Note: Do not modify the contents of this file as it is overwritten
*         each time the mapping model is updated.
*****************************************************************************
-->
<xsl:stylesheet
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xltxe="http://www.ibm.com/xmlns/prod/xltxe-j"
    xmlns:math="http://exslt.org/math"
    xmlns:str="http://exslt.org/strings"
    xmlns:set="http://exslt.org/sets"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:date="http://exslt.org/dates-and-times"
    xmlns:fn="http://www.w3.org/2005/xpath-functions"
    xmlns:exsl="http://exslt.org/common"
    xmlns:xs4xs="http://www.w3.org/2001/XMLSchema"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:in2="urn:siemens:names:prov:gw:SPML:2:0"
    xmlns:in4="urn:siemens:names:prov:gw:EIR_NSR:1:0"
    xmlns:in3="wsdl.http://three.co.uk/wsdl/as_sdm_093/serviceordersdm/v1"
    xmlns:io5="http://www.ibm.com/xmlns/prod/websphere/http/sca/6.1.0"
    xmlns:io4="http://www.ibm.com/telecom/v8.5.0/businessobject/system/sid-v12.5/common"
    xmlns:io3="http://www.ibm.com/websphere/sibx/smo/v6.0.1"
    xmlns:io2="http://www.ibm.com/xmlns/prod/websphere/mq/sca/6.0.0"
    xmlns:in="urn:siemens:names:prov:gw:MA_SUBSCRIBER:1:0"
    xmlns:io="http://schemas.xmlsoap.org/ws/2004/08/addressing"
    xmlns:io10="http://www.w3.org/2003/05/soap-envelope"
    xmlns:io8="http://AS_SubmitResourceOrder_TIBCO"
    xmlns:io9="http://TIBCO_OSS_Library"
    xmlns:io6="http://TPCMN"
    xmlns:io7="http://www.w3.org/2005/08/addressing"
    xmlns:out7="http://www.ibm.com/software/issw/telecom/pack/v8.5.0/lite/businessobject/system/assurance/extension"
    xmlns:out6="http://www.ibm.com/software/issw/telecom/pack/v8.5.0/lite/businessobject/system/common/extension"
    xmlns:out9="http://www.ibm.com/telecom/v8.5.0/businessobject/system/sid-v12.5/fulfillment/extensions"
    xmlns:out8="http://www.ibm.com/software/issw/telecom/pack/v8.5.0/lite/businessobject/system/sid-v12.5"
    xmlns:out11="http://TPRMOAI/AIS/SubmitResourceOrder"
    xmlns:out3="http://www.ibm.com/software/issw/telecom/pack/v8.5.0/lite/businessobject/system/billing/extension"
    xmlns:out12="wsdl.http://TPRMOAI/AIS/SubmitResourceOrder"
    xmlns:out2="http://www.ibm.com/telecom/v8.5.0/businessobject/system/sid-v12.5/systemview"
    xmlns:out5="http://www.ibm.com/software/issw/telecom/pack/v8.5.0/lite/businessobject/system/fulfillment/extension"
    xmlns:out10="http://www.ibm.com/telecom/v8.5.0/businessobject/system/sid-v12.5/assurance/extensions"
    xmlns:out4="http://www.ibm.com/telecom/v8.5.0/businessobject/system/sid-v12.5/messageview"
    xmlns:out13="http://www.ibm.com/telecom/v8.5.0/businessobject/system/sid-v12.5/billing/extensions"
    xmlns:out="http://www.ibm.com/telecom/v8.5.0/businessobject/system/sid-v12.5/common/extensions"
    xmlns:map="http://AppS_SubmitResourceOrder_TIBCO/xslt/Map_SDM_CretaeAUC_Resp"
    xmlns:msl="http://www.ibm.com/xmlmap"
    exclude-result-prefixes="math str set xs date fn exsl map xltxe msl"
    version="2.0">
  <xsl:output method="xml" encoding="UTF-8" indent="no"/>

  <!-- root wrapper template  -->
  <xsl:template match="/">
    <xsl:choose>
      <xsl:when test="msl:datamap">
        <msl:datamap>
          <xsl:element name="dataObject">
            <xsl:attribute name="xsi:type">
              <xsl:value-of select="'io3:ServiceMessageObject'"/>
            </xsl:attribute>
            <xsl:call-template name="map:Map_SDM_CretaeAUC_Resp2">
              <xsl:with-param name="smo" select="msl:datamap/dataObject[1]"/>
            </xsl:call-template>
          </xsl:element>
        </msl:datamap>
      </xsl:when>
      <xsl:otherwise>
        <xsl:apply-templates select="io3:smo" mode="map:Map_SDM_CretaeAUC_Resp"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

  <!-- This rule represents an element mapping: "io3:smo" to "io3:smo".  -->
  <xsl:template match="io3:smo"  mode="map:Map_SDM_CretaeAUC_Resp">
    <io3:smo>
      <body>
        <xsl:attribute name="xsi:type">
          <xsl:value-of select="'out12:invokeResponseMsg'"/>
        </xsl:attribute>
        <out11:invokeResponse>
          <submitResourceOrderOutput>
            <out4:Header>
              <!-- a simple data mapping: "context/shared/TransID"(string) to "io4:CorrelationId_T"(string) -->
              <xsl:if test="context/shared/TransID">
                <xsl:element name="io4:CorrelationId_T">
                  <xsl:value-of select="context/shared/TransID"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "context/shared/CDMHeader/io4:ActivityStatusEnum_T"(string) to "io4:ActivityStatusEnum_T"(string) -->
              <xsl:if test="context/shared/CDMHeader/io4:ActivityStatusEnum_T">
                <xsl:element name="io4:ActivityStatusEnum_T">
                  <xsl:value-of select="context/shared/CDMHeader/io4:ActivityStatusEnum_T"/>
                </xsl:element>
              </xsl:if>
              <!-- a simple data mapping: "context/shared/CDMHeader/io4:ActivityStatus_T"(string) to "io4:ActivityStatus_T"(string) -->
              <xsl:if test="context/shared/CDMHeader/io4:ActivityStatus_T">
                <xsl:element name="io4:ActivityStatus_T">
                  <xsl:value-of select="context/shared/CDMHeader/io4:ActivityStatus_T"/>
                </xsl:element>
              </xsl:if>
              <!-- a for-each transform: "io4:ProviderInfo"(CharacteristicSpecification) to "io4:ProviderInfo"(CharacteristicSpecification) -->
              <xsl:for-each select="context/shared/CDMHeader/io4:ProviderInfo">
                <xsl:copy-of select="." copy-namespaces="yes"/>
              </xsl:for-each>
            </out4:Header>
          </submitResourceOrderOutput>
        </out11:invokeResponse>
      </body>
    </io3:smo>
  </xsl:template>

  <!-- This rule represents a type mapping: "io3:smo" to "io3:smo".  -->
  <xsl:template name="map:Map_SDM_CretaeAUC_Resp2">
    <xsl:param name="smo"/>
    <body>
      <xsl:attribute name="xsi:type">
        <xsl:value-of select="'out12:invokeResponseMsg'"/>
      </xsl:attribute>
      <out11:invokeResponse>
        <submitResourceOrderOutput>
          <out4:Header>
            <!-- a simple data mapping: "$smo/context/shared/TransID"(string) to "io4:CorrelationId_T"(string) -->
            <xsl:if test="$smo/context/shared/TransID">
              <xsl:element name="io4:CorrelationId_T">
                <xsl:value-of select="$smo/context/shared/TransID"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "$smo/context/shared/CDMHeader/io4:ActivityStatusEnum_T"(string) to "io4:ActivityStatusEnum_T"(string) -->
            <xsl:if test="$smo/context/shared/CDMHeader/io4:ActivityStatusEnum_T">
              <xsl:element name="io4:ActivityStatusEnum_T">
                <xsl:value-of select="$smo/context/shared/CDMHeader/io4:ActivityStatusEnum_T"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "$smo/context/shared/CDMHeader/io4:ActivityStatus_T"(string) to "io4:ActivityStatus_T"(string) -->
            <xsl:if test="$smo/context/shared/CDMHeader/io4:ActivityStatus_T">
              <xsl:element name="io4:ActivityStatus_T">
                <xsl:value-of select="$smo/context/shared/CDMHeader/io4:ActivityStatus_T"/>
              </xsl:element>
            </xsl:if>
            <!-- a for-each transform: "io4:ProviderInfo"(CharacteristicSpecification) to "io4:ProviderInfo"(CharacteristicSpecification) -->
            <xsl:for-each select="$smo/context/shared/CDMHeader/io4:ProviderInfo">
              <xsl:copy-of select="." copy-namespaces="yes"/>
            </xsl:for-each>
          </out4:Header>
        </submitResourceOrderOutput>
      </out11:invokeResponse>
    </body>
  </xsl:template>

  <!-- *****************    Utility Templates    ******************  -->
  <!-- copy the namespace declarations from the source to the target -->
  <xsl:template name="copyNamespaceDeclarations">
    <xsl:param name="root"/>
    <xsl:for-each select="$root/namespace::node()[not(name() = '')]">
      <xsl:copy/>
    </xsl:for-each>
  </xsl:template>
</xsl:stylesheet>
